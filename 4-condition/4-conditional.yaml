AWSTemplateFormatVersion: "2010-09-09"
Description: A simple EC2 instance

# --parameters ParameterKey=PublicKey,ParameterValue="ssh-rsa AAAAB3NzaC... email@address.com"
Parameters:
  EnvType:
    Type: String
    Default: "Dev"
    AllowedValues:
      - "Prod"
      - "Dev"
    Description: Control the instance size, false will be t2.micro, or true will be t2.large. Default is false
  PublicKey:
    Description: Input public key
    Type: String
    NoEcho: true
  InstructionFamily:
    Description: Select instance type
    Type: String
    Default: amd
    AllowedValues:
      - amd
      - arm
    Description: Available options are t2.micro, t2.small, t2.large. Default is t2.micro

Conditions:
  # If first argument(!Ref EnvType) equals "Prod", return true, otherwise return false.
  CreateLargeSize: !Equals [!Ref EnvType, "Prod"] 

Mappings:
  RegionMap:
    us-east-1:
      "arm": "ami-01625be155ee390e9"
      "amd": "ami-06878d265978313ca"
    us-west-2:
      "arm": "ami-072d13a1cd84b5f6b"
      "amd": "ami-095413544ce52437d"

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", !Ref InstructionFamily]
      InstanceType:
        # If 'CreateLargeSize' condition is true, return `t2.large` else 't2.micro'
        'Fn::If':
          - CreateLargeSize
          - 't2.large'
          - 't2.micro'
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref ServerSecurityGroup
      KeyName: 
        Ref: ImportedKeyPair

  #
  ImportedKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: NameForMyImportedKeyPair
      PublicKeyMaterial: !Ref PublicKey

  # an elastic IP for our instance
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyInstance

  # our EC2 security group
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22

  # our second EC2 security group
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Service ports
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 192.168.1.1/32
